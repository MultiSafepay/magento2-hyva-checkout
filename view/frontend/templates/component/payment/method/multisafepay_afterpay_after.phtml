<?php
/**
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is provided with Magento in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 *
 * Copyright Â© MultiSafepay, Inc. All rights reserved.
 * See DISCLAIMER.md for disclaimer details.
 */

declare(strict_types=1);

/** @var Template $block */
/** @var MultiSafepayRivertyComponent $magewire */
/** @var Escaper $escaper */

use MultiSafepay\HyvaCheckout\Payment\Method\MultiSafepayRivertyComponent;
use Magento\Framework\Escaper;
use Magento\Framework\View\Element\Template;

?>
<?php if ($magewire->isPaymentComponentEnabled()) {?>
<script>
    window.addEventListener('checkout:payment:method-activate', event => {
        console.log('checkout:payment:method-activate', event.detail.method, '<?= $escaper->escapeJs($magewire->getMethodCode())?>');

        if (event.detail.method !== 'multisafepay_afterpay') {
            console.log('early return');
            return;
        }

        let paymentComponent;

        hyvaCheckout.payment.activate('multisafepay_afterpay', {
            async initialize() {
                let recurringData;

                let orderData = {
                    currency: '<?= $escaper->escapeJs($magewire->getCurrency()) ?>',
                    amount: '<?= $escaper->escapeJs($magewire->getAmount()) ?>',
                    template: {
                        settings: {
                            embed_mode: true,
                        },
                        merge: true
                    },
                    customer: {
                        locale: '<?= $escaper->escapeJs($magewire->getLocale()) ?>',
                        country: '<?= $escaper->escapeJs($magewire->getCountry()) ?>'
                    }
                }

                <?php if ($magewire->getTokens()) { ?>
                recurringData = {
                    model: 'cardOnFile',
                    tokens: <?= $magewire->getTokens() ?>
                }
                <?php } ?>

                let paymentComponentData = {
                    env: '<?= $escaper->escapeJs($magewire->getEnvironment()) ?>',
                    apiToken: '<?= $escaper->escapeJs($magewire->getApiToken()) ?>',
                    order: orderData
                };

                if (recurringData) {
                    paymentComponentData.recurring = recurringData;
                }

                paymentComponent = new MultiSafepay(paymentComponentData);

                paymentComponent.init('payment', {
                    container: '#multisafepay-multisafepay_afterpay-component',
                    gateway: 'AFTERPAY',
                    onError: state => {
                        console.log('onError', state);
                    }
                })
            },

            async validate() {
                let paymentData = await paymentComponent.getPaymentData();
                const component = '<?= $escaper->escapeJs($block->getNameInLayout()) ?>';

                if (paymentComponent.hasErrors()) {
                    return false;
                }

                await Magewire.find(component).setPaymentComponentData({
                    payload: paymentData.payload,
                    tokenize: paymentData.tokenize ?? false
                });

                return true;
            }
        }, document.querySelector('#multisafepay-multisafepay_afterpay-component')
        );
    })
</script>
<?php isset($hyvaCsp) && $hyvaCsp->registerInlineScript() ?>
<?php } ?>
